{"version":3,"sources":["_reset.scss","_variables.scss","_icons.scss","_base.scss","../bower_components/breakpoint-sass/stylesheets/_breakpoint.scss","../bower_components/susy/sass/susy/output/support/_rem.scss","../bower_components/susy/sass/susy/language/susy/_container.scss","../bower_components/susy/sass/susy/output/support/_clearfix.scss","../bower_components/susy/sass/susy/language/susy/_span.scss","../bower_components/susy/sass/susy/output/shared/_direction.scss","../bower_components/susy/sass/susy/language/susy/_gutters.scss","_typography.scss","_mixins.scss","_images.scss","ui/_lists.scss","ui/_buttons.scss","ui/_tables.scss","ui/_forms.scss","ui/_panels-notifications.scss"],"names":[],"mappings":"AAAA,2DAAA,CAA4D,8ECIhD,CAGZ,wFAAY,CCHZ,qFAAY,CFJgD,KAAK,sBAAsB,CAAC,yBAAyB,CAAC,6BAA6B,CAAC,KAAK,QAAQ,CAAC,sFAAsF,aAAa,CAAC,4BAA4B,oBAAoB,CAAC,uBAAuB,CAAC,sBAAsB,YAAY,CAAC,QAAQ,CAAE,kBAAiB,YAAY,CAAC,EAAE,cAAc,CAAC,iBAAiB,SAAS,CAAC,YAAY,wBAAwB,CAAC,SAAS,eAAe,CAAC,IAAI,iBAAiB,CAAC,GAAG,aAAa,CAAC,cAAc,CAAC,KAAK,eAAe,CAAC,UAAU,CAAC,MAAM,aAAa,CAAC,QAAQ,aAAa,CAAC,aAAa,CAAC,iBAAiB,CAAC,uBAAuB,CAAC,IAAI,SAAS,CAAC,IAAI,aAAa,CAAC,IAAI,QAAQ,CAAC,eAAe,eAAe,CAAC,OAAO,eAAe,CAAC,GAA+B,8BAAsB,CAAtB,sBAAsB,CAAC,QAAQ,CAAC,IAAI,aAAa,CAAC,kBAAkB,+BAA+B,CAAC,aAAa,CAAC,sCAAsC,aAAa,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,gBAAgB,CAAC,cAAc,mBAAmB,CAAC,oEAAoE,yBAAyB,CAAC,cAAc,CAAC,sCAAsC,cAAc,CAAC,iDAAiD,QAAQ,CAAC,SAAS,CAAC,MAAM,kBAAkB,CAAC,uCAAuC,6BAAqB,CAArB,qBAAqB,CAAC,SAAS,CAAC,4FAA4F,WAAW,CAAC,mBAAmB,4BAA4B,CAA6B,8BAA8B,CAAC,sBAAsB,CAAC,+FAA+F,uBAAuB,CAAC,SAAS,uBAAuB,CAAC,YAAY,CAAC,0BAA0B,CAAC,OAAO,QAAQ,CAAC,SAAS,CAAC,SAAS,aAAa,CAAC,SAAS,eAAe,CAAC,MAAM,wBAAwB,CAAC,gBAAgB,CAAC,MAAM,SAAS,CAAE,KGK16D,UF4CkB,CE3ClB,QAAS,CACT,SAAU,CACV,kBFkCiC,CEjCjC,iBFiByB,CEhBzB,+BFQyC,CEPzC,cFcsB,CEbtB,eFcyB,CEbzB,eFQqB,CG2ClB,0BD5DJ,KAYE,cFOc,CENd,iBFOiB,CELlB,CAeD,uBACC,eAAgB,CAChB,MEjBG,gBJPc,CIOd,gBCqDoC,CDrDpC,iBCqDmE,CHhCtE,eFDW,CEEX,YAAa,CI9BV,YACE,WAAY,CACZ,aAAc,CACd,UAAW,CACZ,QJ8BJ,kBFHiC,CEElC,wBEzBI,6BGD4D,CHC5D,qBGD4D,CHC5D,UGwI0C,CHxI1C,UIA4D,CJA5D,qBKqFsB,CLrFtB,sBKqFsB,CPvDxB,kBE9BE,6BGD4D,CHC5D,qBGD4D,CHC5D,UGwI0C,CHxI1C,UIA4D,CJA5D,qBKqFsB,CLrFtB,sBKqFsB,CNxCtB,0BDZJ,kBEjCI,6BGD4D,CHC5D,qBGD4D,CHC5D,eGwI0C,CHxI1C,UIA4D,CJA5D,qBKqFsB,CLrFtB,sBKqFsB,CP9CxB,CANF,gBEjCI,6BGD4D,CHC5D,qBGD4D,CHC5D,UGwI0C,CHxI1C,UIA4D,CJA5D,qBKqFsB,CLrFtB,sBKqFsB,CNxCtB,0BDZJ,gBEjCI,6BGD4D,CHC5D,qBGD4D,CHC5D,eGwI0C,CHxI1C,UIA4D,CJA5D,qBKqFsB,CLrFtB,sBKqFsB,CPvCxB,CQ7DF,YACC,oBAAoB,CACpB,aVwCe,CWzCf,sCAAyC,CAGzC,iCAAoC,CACpC,8BAAiC,CDDjC,yBAEA,aV0CkC,CW/ClC,sCAAyC,CAGzC,iCAAoC,CACpC,8BAAiC,CDGjC,+DAQD,+BVHwC,CUIxC,yBAA0B,CAC1B,eAAgB,CAChB,UAAW,CACV,GAGD,eVGU,CUFV,eVRuB,CUStB,8BAGD,eVJkB,CUKlB,eVbuB,CUcvB,iBAAkB,CAHlB,kCAKE,aVIa,CUTf,8CAQG,aVOa,CWzCf,uCAAyC,CAGzC,kCAAoC,CACpC,+BAAiC,CRuD9B,0BOjCJ,8BAcE,eAAgB,CAEjB,CAED,eACA,eVrBmB,CUsBnB,eV/BuB,CU6BvB,iBAKE,aVda,CUSf,uBAQG,aVXa,CWzCf,uCAAyC,CAGzC,kCAAoC,CACpC,+BAAiC,CDkD/B,GAOH,eVnCU,CUoCV,eAAgB,CAChB,iBAAkB,CACjB,GAGD,eVxCU,CUyCV,mBAAoB,CACnB,GAGD,eV5CU,CU6CV,oBAAqB,CACpB,GAGD,aVhDQ,CUiDR,oBAAqB,CACpB,GAGD,cVpDS,CUqDR,EAGA,mBAAoB,CACpB,cAAe,CACf,iBAAkB,CP7Bf,0BO0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","file":"../scss/style.css","sourcesContent":["/*! normalize.css v3.0.1 | MIT License | git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background:0 0}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}","// ***********************************\r\n// VARIABLES\r\n// ***********************************\r\n\r\n@import url('http://fonts.googleapis.com/css?family=Bitter:400,700,400italic');\r\n//font-family: 'Bitter', serif;\r\n\r\n@import url('http://fonts.googleapis.com/css?family=Roboto:400,300,300italic,400italic');\r\n//font-family: 'Roboto', sans-serif;\r\n\r\n\r\n// LAYOUT\r\n$container: 1024px;\r\n$break-menu: 767px;\r\n\r\n\r\n// TYPOGRAPHY\r\n$font-family-title: 'Roboto', sans-serif;\r\n$font-family-primary: 'Roboto', sans-serif;  // \"Helvetica Neue\",Helvetica,Arial,sans-serif\r\n$font_mono: 10px 'Monaco', monospace;\r\n$font-weight-title: 400;\r\n$font-weight-body: 300;\r\n\r\n$font-size: 100%; \r\n$line-height: 1.625; \r\n$font-size-mobile: 100%; \r\n$line-height-mobile: 1.625;\r\n\r\n$site-title: 2.2em; \r\n$entry-title: 2.5em;\r\n$h1: 2.5em;\r\n$h2: 1.4em;\r\n$h3: 1.4em;\r\n$h4: 1.2em;\r\n$h5: 1em;\r\n$h6: .8em;\r\n\r\n\r\n// COLORS\r\n$white: #fff;\r\n$black: #3a3a3a; \r\n$grey: #ccc;\r\n$grey-light: lighten( $grey, 16% );\r\n$grey-dark: darken( $grey, 20% );\r\n\r\n$color-body-bg: $grey-light; \r\n$color1: #dd4b39;  // red\r\n$color2: #9CBE26;  // green\r\n\r\n$body-text: #333333;\r\n\r\n$link_color: $color1;\r\n$link_hover: darken( $color1, 50% );\r\n\r\n$button-color: $color1;\r\n$button-color-hover: darken( $button-color, 10% );\r\n$button-color-disabled: $button-color;\r\n\r\n$nav-bg: #333333; //bar background    \r\n$nav-interior-bg: #262626; //interior li a\r\n$nav-link-hover: #00AEEF; //blue\r\n$nav-text: #444444;\r\n$nav-text-active: #fff;\r\n\r\n$notification-message: #0196bb;\r\n$notification-success: #9abb01;\r\n$notification-warning: #DD8903;\r\n$notification-alert: #CF493B;\r\n\r\n$panel: $grey-light;\r\n$panel-callout: $grey-light;\r\n\r\n\r\n// Other\r\n$default-border-radius: 5px;","// ***********************************\r\n// ICONS\r\n// ***********************************\r\n// import font awesome\r\n@import url('http://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css');\r\n\r\n\r\n// ***********************************\r\n// FONT AWESOME\r\n// http://fortawesome.github.io/Font-Awesome/icons/\r\n// ***********************************\r\n \r\n.fa-apple{\r\n\tfont-size: 60px;\r\n}\r\n\r\n","// ***********************************\r\n// BASE\r\n// ***********************************\r\n\r\nbody{\r\n\tcolor: $body-text;\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tbackground: $color-body-bg;\r\n\tline-height: $line-height-mobile;\r\n\tfont-family: $font-family-primary;\r\n\tfont-size: $font-size-mobile;\r\n\tfont-size: $line-height-mobile;\r\n\tfont-weight: $font-weight-body;\r\n\r\n\t@include breakpoint($break-menu){\r\n\t\tfont-size: $font-size;\r\n\t\tline-height: $line-height;\r\n\t}\r\n}\r\n\r\n\r\n// ***********************************\r\n// PAGE STRUCTURE\r\n// ***********************************\r\n\r\n//Susy Maps\r\n$susy: (\r\n\tcolumns: 12,\r\n\tgutters: 1/2,\r\n\tmath: fluid,\r\n\tgutter-position: inside,\r\n);\r\n\r\n#header, #content, .page{\r\n\toverflow: hidden;  // clearfix\r\n}\r\n\r\n.page{\r\n\t@include container($container);\r\n\tbackground: $white;\r\n\tpadding: 0 3%;\r\n} // page\r\n\r\n#header{\r\n\tbackground: $grey-light;\r\n\r\n\t#header-wrapper{\r\n\t\t@include span(12);\r\n\t}\t\r\n} // #header\r\n\r\n#content{\r\n\t#primary{\r\n\t\t@include span(12);\r\n\t\t@include breakpoint($break-menu) {\r\n\t\t    @include span(8);\r\n\t\t }\r\n\t}\r\n\r\n\t#aside{\r\n\t\t@include span(12);\r\n\t\t@include breakpoint($break-menu) {\r\n\t\t    @include span(4);\r\n\t\t }\r\n\t}\t\r\n} // content\r\n\r\n","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n","// rem Support\n// ===========\n\n// rem\n// ---\n// Check for an existing support mixin, or output directly.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-rem(\n  $prop,\n  $val\n) {\n  $_reqs: (\n    variable: rhythm-unit rem-with-px-fallback,\n    mixin: rem,\n  );\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\n    @include rem($prop, $val);\n  } @else {\n    #{$prop}: $val;\n  }\n}\n","// Container Syntax\n// ================\n\n// Container [mixin]\n// -----------------\n// Set a container element\n// - [$layout]  : <settings>\n@mixin container(\n  $layout: $susy\n) {\n  $inspect    : $layout;\n  $layout     : parse-grid($layout);\n\n  $_width     : get-container-width($layout);\n  $_justify   : parse-container-position(susy-get(container-position, $layout));\n  $_property  : if(susy-get(math, $layout) == static, width, max-width);\n\n  $_box       : susy-get(box-sizing, $layout);\n\n  @if $_box {\n    @include output((box-sizing: $_box));\n  }\n\n  @include susy-inspect(container, $inspect);\n  @include float-container($_width, $_justify, $_property);\n  @include show-grid($layout);\n}\n\n// Container [function]\n// --------------------\n// Return container width\n// - [$layout]  : <settings>\n@function container(\n  $layout: $susy\n) {\n  $layout: parse-grid($layout);\n  @return get-container-width($layout);\n}\n\n// Get Container Width\n// -------------------\n// Calculate the container width\n// - [$layout]: <settings>\n@function get-container-width(\n  $layout: $susy\n) {\n  $layout         : parse-grid($layout);\n  $_width         : susy-get(container, $layout);\n  $_column-width  : susy-get(column-width, $layout);\n  $_math          : susy-get(math, $layout);\n\n  @if not($_width) or $_width == auto {\n    @if valid-column-math($_math, $_column-width) {\n      $_columns   : susy-get(columns, $layout);\n      $_gutters   : susy-get(gutters, $layout);\n      $_spread    : if(is-split($layout), wide, narrow);\n      $_width     : susy-sum($_columns, $_gutters, $_spread) * $_column-width;\n    } @else {\n      $_width: 100%;\n    }\n  }\n\n  @return $_width;\n}\n\n// Parse Container Position\n// ------------------------\n// Parse the $container-position into margin values.\n// - [$justify]   : left | center | right | <length> [<length>]\n@function parse-container-position(\n  $justify: map-get($susy-defaults, container-position)\n) {\n  $_return: if($justify == left, 0, auto) if($justify == right, 0, auto);\n\n  @if not(index(left right center, $justify)) {\n    $_return: nth($justify, 1);\n    $_return: $_return if(length($justify) > 1, nth($justify, 2), $_return);\n  }\n\n  @return $_return;\n}\n","// Susy Fallback Clearfix\n// ======================\n\n\n// Clearfix\n// --------\n// Check for an existing support mixin, or provide a simple fallback.\n@mixin susy-clearfix {\n  @if susy-support(clearfix, (mixin: clearfix)) {\n    @include clearfix;\n  } @else {\n    &:after {\n      content: \" \";\n      display: block;\n      clear: both;\n    }\n  }\n}\n","// Span Syntax\n// ===========\n\n// Span [mixin]\n// ------------\n// Set a spanning element using shorthand syntax.\n// - $span  : <span>\n@mixin span(\n  $span\n) {\n  $inspect: $span;\n  $span: parse-span($span);\n  $output: span-math($span);\n  $nesting: susy-get(span, $span);\n  $clear: susy-get(clear, $span);\n\n  $box: susy-get(box-sizing, $span);\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\n\n  @if $clear == break {\n    @include break;\n  } @else if $clear == nobreak {\n    @include nobreak;\n  }\n\n  @include susy-inspect(span, $inspect);\n  @include output((box-sizing: $box));\n  @include float-span-output($output...);\n\n  @if valid-columns($nesting, silent) {\n    @include nested($span) { @content; }\n  } @else {\n    @content;\n  }\n}\n\n// Span [function]\n// ---------------\n// Return the width of a span.\n// - $span  : <span>\n@function span(\n  $span\n) {\n  @return get-span-width($span);\n}\n\n// Span Math\n// ---------\n// Get all the span results.\n// - $span: <map>\n@function span-math(\n  $span\n) {\n  $nest             : if(susy-get(role, $span) == nest, true, false);\n  $split-nest       : if(is-split($span) and $nest, true, false);\n  $edge             : get-edge($span);\n  $location         : get-location($span);\n\n  $float            : from;\n  $padding-before   : null;\n  $padding-after    : null;\n  $margin-before    : null;\n  $margin-after     : null;\n\n  // calculate widths\n  $spread: index(map-values($span), spread);\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\n  $width: get-span-width($span);\n  $gutters: get-gutters($span);\n\n  // apply gutters\n  @if is-inside($span) {\n    @if not(susy-get(role, $span)) {\n      $padding-before: map-get($gutters, before);\n      $padding-after: map-get($gutters, after);\n    }\n  } @else {\n    @if not($split-nest) {\n      $margin-before: map-get($gutters, before);\n      $margin-after: map-get($gutters, after);\n    }\n  }\n\n  // special margin handling\n  @if susy-get(output, $span) == isolate and $location {\n    $margin-before: get-isolation($span);\n    $margin-after: -100%;\n  } @else if $edge {\n    $is-split: is-split($span);\n    $pos: susy-get(gutter-position, $span);\n\n    @if $edge == last {\n      $float: susy-get(last-flow, $span);\n    }\n\n    @if not($is-split) {\n      @if $edge == full or ($edge == first and $pos == before) {\n        $margin-before: 0;\n      }\n      @if $edge == full or ($edge == last and $pos == after) {\n        $margin-after: 0;\n      }\n    }\n\n  }\n\n  @return (\n    width           : $width,\n    float           : $float,\n    margin-before   : $margin-before,\n    margin-after    : $margin-after,\n    padding-before  : $padding-before,\n    padding-after   : $padding-after,\n    flow            : susy-get(flow, $span),\n  );\n}\n\n// Get Span Width\n// --------------\n// Return span width.\n// - $span: <map>\n@function get-span-width(\n  $span\n) {\n  $span     : parse-span($span);\n\n  $n        : susy-get(span, $span);\n  $location : get-location($span);\n  $columns  : susy-get(columns, $span);\n  $gutters  : susy-get(gutters, $span);\n  $spread   : susy-get(spread, $span);\n\n  $context  : null;\n  $span-sum : null;\n  $width    : null;\n\n  @if $n == 'full' {\n    $pos: susy-get(gutter-position, $span);\n    $role: susy-get(role, $span);\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\n  }\n\n  @if type-of($n) != number {\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\n  } @else if unitless($n) {\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\n    $spread: if(is-inside($span), $spread or wide, $spread);\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\n\n    $_math: susy-get(math, $span);\n    $_column-width: susy-get(column-width, $span);\n    @if $_math == static {\n      $width: $span-sum * valid-column-math($_math, $_column-width);\n    } @else {\n      $width: percentage($span-sum / $context);\n    }\n  } @else {\n    $width: $n;\n  }\n\n  @return $width;\n}\n","// Direction Helpers\n// =================\n\n// Susy Flow Defaults\n// ------------------\n// - PRIVATE\n@include susy-defaults((\n  flow: ltr,\n));\n\n// Get Direction\n// -------------\n// Return the 'from' or 'to' direction of a ltr or rtl flow.\n// - [$flow]  : ltr | rtl\n// - [$key]   : from | to\n@function get-direction(\n  $flow: map-get($susy-defaults, flow),\n  $key: from\n) {\n  $return: if($flow == rtl, (from: right, to: left), (from: left, to: right));\n  @return map-get($return, $key);\n}\n\n// To\n// --\n// Return the 'to' direction of a flow\n// - [$flow]  : ltr | rtl\n@function to(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, to);\n}\n\n// From\n// ----\n// Return the 'from' direction of a flow\n// - [$flow]  : ltr | rtl\n@function from(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, from);\n}\n","// Gutter Syntax\n// =============\n\n\n// Gutters\n// -------\n// Set gutters on an element.\n// - [$span]   : <settings>\n@mixin gutters(\n  $span: $susy\n) {\n  $inspect  : $span;\n  $span     : parse-gutters($span);\n  $_gutters : get-gutters($span);\n\n  $_output: (\n    before: map-get($_gutters, before),\n    after: map-get($_gutters, after),\n    flow: susy-get(flow, $span),\n  );\n\n  @include susy-inspect(gutters, $inspect);\n\n  @if is-inside($span) {\n    @include padding-output($_output...);\n  } @else {\n    @include margin-output($_output...);\n  }\n}\n\n@mixin gutter(\n  $span: $susy\n) {\n  @include gutters($span);\n}\n\n\n// Gutter\n// ------\n// Return the width of a gutter.\n// - [$span]   : <settings>\n@function gutter(\n  $span: $susy\n) {\n  $span: parse-gutters($span);\n\n  $_gutters: get-gutters($span);\n  $_gutters: map-get($_gutters, before) or map-get($_gutters, after);\n\n  @return $_gutters;\n}\n\n@function gutters(\n  $span: $susy\n) {\n  @return gutter($span);\n}\n\n\n// Get Gutter Width\n// ----------------\n// Return gutter width.\n// - [$context]: <context>\n@function get-gutter-width(\n  $context: $susy\n) {\n  $context  : parse-gutters($context);\n\n  $_gutters : susy-get(gutters, $context);\n  $_gutter  : susy-get(gutter-override, $context);\n\n  @if $_gutters and ($_gutters > 0) and not($_gutter) {\n    $_column-width: susy-get(column-width, $context);\n    $_math: gutter-math($context);\n    @if $_math == static {\n      $_gutter: $_gutters * valid-column-math($_math, $_column-width);\n    } @else {\n      $_columns : susy-get(columns, $context);\n      $_spread  : if(is-split($context), wide, susy-get(spread, $context));\n      $_gutter  : percentage($_gutters / susy-sum($_columns, $_gutters, $_spread));\n    }\n  }\n\n  $_gutter: if($_gutter == 'no-gutters' or $_gutter == 'no-gutter', null, $_gutter);\n\n  @return $_gutter;\n}\n\n\n// Get Gutters\n// -----------\n// Return before and after gutter values.\n// - [$context]: <context>\n@function get-gutters(\n  $context: $susy\n) {\n  $context            : parse-gutters($context);\n\n  $_gutter-position   : susy-get(gutter-position, $context);\n  $_gutter            : get-gutter-width($context);\n\n  $_return            : (before: null, after: null);\n\n  @if is-split($context) and $_gutter {\n    $_gutter: $_gutter / 2;\n    $_return: map-merge($_return, (before: $_gutter, after: $_gutter));\n  } @else {\n    $_return: map-merge($_return, ($_gutter-position: $_gutter));\n  }\n\n  @return $_return;\n}\n\n\n// Is Inside\n// ---------\n// Returns true if gutters are inside.\n// $context: <context>\n@function is-inside(\n  $context\n) {\n  $_inside: inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_inside, $_gutter-position), true, false);\n}\n\n\n// Is Split\n// --------\n// Returns true if gutters are split.\n// $context: <context>\n@function is-split(\n  $context\n) {\n  $_split: split inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_split, $_gutter-position), true, false);\n}\n\n\n// Gutter Math\n// -----------\n// Return the math to use for gutter calculations\n// $context: <context>\n@function gutter-math(\n  $context: $susy\n) {\n  $_return  : susy-get(math, $context);\n  $_return  : if(susy-get(gutter-position, $context) == inside-static, static, $_return);\n\n  @return $_return;\n}\n","// ***********************************\r\n// LINKS\r\n// ***********************************\r\n\r\na, a:visited {\r\n\ttext-decoration:none;\r\n\tcolor:$link_color;\r\n\t@include transition-all(.5s);\r\n}\r\na:hover, a:active, a:focus {\r\n\tcolor:$link_hover;\r\n\t@include transition-all(.5s);\r\n}\r\n\r\n\r\n// ***********************************\r\n// TYPOGRAPHY AND LINKS\r\n// ***********************************\r\n\r\nh1,h1.entry-title,h1.site-title, h1.site-title a,h2,h3,h4,h5,h6 {\r\nfont-family: $font-family-title;\r\ntext-transform: capitalize;\r\nline-height: 1em;\r\nclear: both;\r\n}\r\n\r\nh1 { \r\nfont-size:$h1;\r\nfont-weight: $font-weight-title; \r\n}\r\n\r\nh1.site-title, h1.site-title a{\r\nfont-size:$site-title;\r\nfont-weight: $font-weight-title;\r\ntext-align: center;\r\n\ta{\r\n\t\tcolor: $black;\r\n\r\n\t\t&:hover{\r\n\t\t\tcolor: $color1;    \r\n\t\t\t@include transition-all(.25s);\r\n\t\t}\r\n\t}\r\n\r\n\t@include breakpoint($break-menu){\r\n\t\ttext-align: left;\r\n\t}\r\n}\r\n\r\nh1.entry-title{\r\nfont-size:$entry-title;\r\nfont-weight: $font-weight-title;\r\n\r\n\ta{\r\n\t\tcolor: $black;\r\n\r\n\t\t&:hover{\r\n\t\t\tcolor: $color1;\r\n\t\t\t@include transition-all(.25s);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\nh2 { \r\nfont-size:$h2; \r\nfont-weight: 400;\r\nline-height: 2.6em;\r\n}\r\n\r\nh3 { \r\nfont-size:$h3;\r\nletter-spacing: -1px; \r\n}\r\n\r\nh4 { \r\nfont-size:$h4;\r\nletter-spacing: -.5px; \r\n}\r\n\r\nh5 { \r\nfont-size:$h5;\r\nletter-spacing: -.5px; \r\n}\r\n\r\nh6 { \r\nfont-size:$h6;\r\n}\r\n\r\np {\r\n\tmargin-bottom: 1.5em;\r\n\tfont-size: 16px;\r\n\tline-height: 1.8em;\r\n\r\n\t@include breakpoint($break-menu){\r\n\t\tfont-size: 16px;\r\n\t}\r\n}\r\n\r\nb, strong {\r\n\tfont-weight: bold;\r\n}\r\n\r\ndfn, cite, em, i {\r\n\tfont-style: italic;\r\n}\r\n\r\nblockquote{\r\n\tborder-left: 10px solid $grey-light;\r\n\tpadding-left: 15px;\r\n}\r\n\r\n\r\nblockquote.pq {\r\n    background: $color1;\r\n    color: #fff;\r\n    border-left: medium none;    \r\n    font-size: 1.4em;\r\n    line-height: 1.6em;\r\n    padding: 30px;   \r\n\r\n    @include breakpoint(600px){\r\n    \tfloat: right;\r\n    \t width: 40%;\r\n    }\r\n\r\n    &::before{\r\n    \tcontent: \"\\\"\";\r\n    }\r\n   &::after{\r\n    \tcontent: \"\\\"\";\r\n    }\r\n}\r\n\r\ncite{\r\n\tdisplay: block;\r\n\tpadding-top: 20px;\r\n}\r\n\r\naddress {\r\n\tmargin: 0 0 1.5em;\r\n}\r\n\r\n\r\npre {\r\n\tbackground: $grey-light;\r\n\tfont-family: $font_mono;\r\n\tline-height: 1.6;\r\n\tmargin-bottom: 1.6em;\r\n\tmax-width: 100%;\r\n\toverflow: auto;\r\n\tpadding: 1.6em;\r\n}\r\n\r\ncode, kbd, tt, var {\r\n\tfont-family: $font_mono;\r\n}\r\n\r\nabbr, acronym {\r\n\tborder-bottom: 1px dotted $grey-light;\r\n\tcursor: help;\r\n}\r\n\r\nmark, ins {\r\n\tbackground: #fff9c0;\r\n\ttext-decoration: none;\r\n}\r\n\r\nsup,\r\nsub {\r\n\tfont-size: 75%;\r\n\theight: 0;\r\n\tline-height: 0;\r\n\tposition: relative;\r\n\tvertical-align: baseline;\r\n}\r\n\r\nsup {\r\n\tbottom: 1ex;\r\n}\r\n\r\nsub {\r\n\ttop: .5ex;\r\n}\r\n\r\nsmall {\r\n\tfont-size: 75%;\r\n}\r\n\r\nbig {\r\n\tfont-size: 125%;\r\n}\r\n\r\n\r\n\r\n","// ***********************************\r\n// MIXINS\r\n// ***********************************\r\n\r\n@mixin transition-all($time:1s){\r\n\t-webkit-transition: all $time ease-in-out;\r\n\t-moz-transition: all $time ease-in-out;\r\n\t-ms-transition: all $time ease-in-out;\r\n\t-o-transition: all $time ease-in-out;\r\n\ttransition: all $time ease-in-out;\r\n}\r\n\r\n@mixin fade($time:0.5s){\r\n\t-webkit-transition: background-color $time ease-in-out;\r\n\t-moz-transition: background-color $time ease-in-out;\r\n\t-o-transition: background-color $time ease-in-out;\r\n\t-ms-transition: background-color $time ease-in-out;\r\n\ttransition: background-color $time ease-in-out;\r\n}\r\n\r\n","// ***********************************\r\n// IMAGES\r\n// ***********************************\r\n\r\nimg {\r\n\theight: auto; /* Make sure images are scaled correctly. */\r\n\tmax-width: 100%; /* Adhere to container width. */\r\n}\r\n\r\nfigure{\r\n\tmax-width: 100%;\r\n\tmargin: 1em 20px;\r\n\r\n\tfigcaption{\r\n\t\ttext-align: center;\r\n\t\tfont-size: 14px;\r\n\t\tcolor: lighten( $body-text, 50% );\r\n\t\tfont-style: italic;\r\n\t\tletter-spacing: -.5px;\r\n\t}\r\n}\r\n\r\nembed, iframe, object {\r\n\tmax-width: 100%;\r\n}\r\n\r\n\r\n// ***********************************\r\n// WORDPRESS UNDERSCORE: DEFAULT CAPTION\r\n// ***********************************\r\n// .wp-caption {\r\n// \tmargin-bottom: 1.5em;\r\n// \tmax-width: 100%;\r\n// }\r\n// .wp-caption img[class*=\"wp-image-\"] {\r\n// \tdisplay: block;\r\n// \tmargin: 0 auto;\r\n// }\r\n// .wp-caption-text {\r\n// \ttext-align: center;\r\n// }\r\n// .wp-caption .wp-caption-text {\r\n// \tmargin: 0.8075em 0;\r\n// }\r\n\r\n\r\n\r\n// ***********************************\r\n// WORDPRESS UNDERSCORE: DEFAULT MEDIA\r\n// ***********************************\r\n// .page-content img.wp-smiley, .entry-content img.wp-smiley, .comment-content img.wp-smiley {\r\n// \tborder: none;\r\n// \tmargin-bottom: 0;\r\n// \tmargin-top: 0;\r\n// \tpadding: 0;\r\n// }\r\n/* Make sure embeds and iframes fit their containers */\r\n\r\n\r\n\r\n\r\n// ***********************************\r\n// WORDPRESS UNDERSCORE: DEFAULT ALIGNMENTS\r\n// ***********************************\r\n// .alignleft {\r\n// \tdisplay: inline;\r\n// \tfloat: left;\r\n// \tmargin-right: 1.5em;\r\n// \tmargin-bottom: 1em;\r\n//     margin-top: 1em;\r\n// }\r\n// .alignright {\r\n// \tdisplay: inline;\r\n// \tfloat: right;\r\n// \tmargin-left: 1.5em;\r\n//     margin-bottom: 1em;\r\n//     margin-top: 1em;\r\n// }\r\n// .aligncenter {\r\n// \tclear: both;\r\n// \tdisplay: block;\r\n// \tmargin: 0 auto;\r\n// }\r\n\r\n\r\n// ***********************************\r\n// WORDPRESS UNDERSCORE: DEFAULT GALLERY\r\n// ***********************************\r\n// .gallery {\r\n// \tmargin-bottom: 1.5em;\r\n// }\r\n// .gallery-item {\r\n// \tdisplay: inline-block;\r\n// \ttext-align: center;\r\n// \tvertical-align: top;\r\n// \twidth: 100%;\r\n// }\r\n// .gallery-columns-2 .gallery-item {\r\n// \tmax-width: 50%;\r\n// }\r\n// .gallery-columns-3 .gallery-item {\r\n// \tmax-width: 33.33%;\r\n// }\r\n// .gallery-columns-4 .gallery-item {\r\n// \tmax-width: 25%;\r\n// }\r\n// .gallery-columns-5 .gallery-item {\r\n// \tmax-width: 20%;\r\n// }\r\n// .gallery-columns-6 .gallery-item {\r\n// \tmax-width: 16.66%;\r\n// }\r\n// .gallery-columns-7 .gallery-item {\r\n// \tmax-width: 14.28%;\r\n// }\r\n// .gallery-columns-8 .gallery-item {\r\n// \tmax-width: 12.5%;\r\n// }\r\n// .gallery-columns-9 .gallery-item {\r\n// \tmax-width: 11.11%;\r\n// }\r\n// .gallery-caption {}","// ***********************************\r\n// LISTS\r\n// ***********************************\r\n\r\nul li{\r\n\tlist-style: inside;\t\t\r\n}\r\n\r\n#secondary aside > ul {\r\n    padding-left: 0;\r\n\r\n    li {\r\n\tlist-style: none;\r\n\t}\r\n}\r\n\r\nhr {\r\n\tbackground-color: $grey-light;\r\n\tborder: 0;\r\n\theight: 1px;\r\n\tmargin: 1.5em 0;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// ***********************************\r\n// BUTTONS\r\n// ***********************************\r\n\r\nbutton {\r\n    font-size: 100%; /* Corrects font size not being inherited in all browsers */\r\n    margin: 0; /* Addresses margins set differently in IE6/7, F3/4, S5, Chrome */\r\n    vertical-align: baseline; /* Improves appearance and consistency in all browsers */\r\n}\r\n\r\n.button, button, input[type=\"submit\"], input[type=\"button\"], input[type=\"reset\"] {\r\n    display: inline-block;\r\n    position: relative;\r\n    padding: 8px 20px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    font-weight: normal;\r\n    border: 0 none;\r\n    margin-top: 0 5px;\r\n\tfont-size: 14px;\r\n\t@include fade;\r\n    font-weight: $font-weight-body;\r\n    font-family: $font-family-title;\r\n    text-transform: capitalize;\r\n}\r\n\r\n.button, button, input[type=\"submit\"], input[type=\"button\"], input[type=\"reset\"]{\r\n\tbackground: $button-color;\r\n\tcolor: #fff !important;\r\n\r\n\t&:hover{\r\n\t\tbackground: $button-color-hover;\r\n\t}\r\n}\r\n\r\ninput[type=\"submit\"]{\r\n    padding-top: 9px;\r\n    padding-bottom: 9px;\r\n}\r\n\r\ninput[type=submit][disabled=disabled], button[disabled=disabled], a.disabled, .button.disabled, button.disabled {\r\n    background: $button-color-disabled;\r\n    color: $white !important;\r\n    opacity:0.6;\r\n    cursor: default;\r\n    pointer-events: none;\r\n}\r\n\r\n.img-button{\r\n    border: none;\r\n    padding: 0;\r\n}\r\n\r\n// colors here\r\n\r\n.button, button, input[type=\"submit\"]{\r\n\tbackground: $button-color;\r\n\tcolor: #fff !important;\r\n}\r\n\r\n\r\n","// ***********************************\r\n// TABLES\r\n// ***********************************\r\n\r\n\r\ntd, th {\r\n    border: 4px solid $white;\r\n    padding: 7px 20px;\r\n}\r\n\r\nth{\r\n\tbackground: $grey-light;\r\n}\r\n\r\ntd{\r\n\tfont-size: .9em;\r\n\r\n\t&:hover{\r\n\t\tbackground: darken( $grey-light, 3% );\r\n\t\t@include transition-all(.3s);\r\n\t}\r\n}\r\n\r\ntr{\r\n\t&:nth-child(odd) {\r\n\t\tbackground-color: $grey-light;\r\n\r\n\t}\r\n}","// ***********************************\r\n// FORMS\r\n// ***********************************\r\n\r\ninput,\r\nselect,\r\ntextarea {\r\n    font-size: 100%; /* Corrects font size not being inherited in all browsers */\r\n    margin: 0; /* Addresses margins set differently in IE6/7, F3/4, S5, Chrome */\r\n    vertical-align: baseline; /* Improves appearance and consistency in all browsers */\r\n}\r\n\r\ntextarea {\r\n    overflow: auto; /* Removes default vertical scrollbar in IE6/7/8/9 */\r\n    padding-left: 3px;\r\n    vertical-align: top; /* Improves readability and alignment in all browsers */\r\n}\r\n\r\nlabel{\r\n\tcolor: $body-text;\r\n    padding-right: 10px;\r\n}\r\n\r\n\r\n\r\ninput, textarea {\r\n    border: 1px solid #DDDDDD;\r\n    color: #7F7F7F;\r\n    font-family: sans-serif;\r\n    font-size: 14px;\r\n    line-height: 1;\r\n    margin: 2px 6px 12px 0;\r\n    padding: 8px;\r\n    \r\n}\r\n\r\nselect {\r\n    border: 1px solid #DDDDDD;\r\n    color: #7F7F7F;\r\n    font-size: 14px;\r\n    margin-bottom: 20px;\r\n    padding: 5px;\r\n    border-radius:5px;\r\n}\r\n\r\ninput[type=\"color\"]{\r\n\tborder: none;\r\n\tbackground: none;\r\n\tpadding: 0;\t\r\n}\r\n\r\n\r\ninput[type=\"checkbox\"],\r\ninput[type=\"radio\"] {\r\n    padding: 0; /* Addresses excess padding in IE8/9 */\r\n}\r\ninput[type=\"search\"] {\r\n    -webkit-appearance: textfield; /* Addresses appearance set to searchfield in S5, Chrome */\r\n    -webkit-box-sizing: content-box; /* Addresses box sizing set to border-box in S5, Chrome (include -moz to future-proof) */\r\n    -moz-box-sizing:    content-box;\r\n    box-sizing:         content-box;\r\n}\r\ninput[type=\"search\"]::-webkit-search-decoration { /* Corrects inner padding displayed oddly in S5, Chrome on OSX */\r\n    -webkit-appearance: none;\r\n}\r\nbutton::-moz-focus-inner,\r\ninput::-moz-focus-inner { /* Corrects inner padding and border displayed oddly in FF3/4 www.sitepen.com/blog/2008/05/14/the-devils-in-the-details-fixing-dojos-toolbar-buttons/ */\r\n    border: 0;\r\n    padding: 0;\r\n}\r\n","// ***********************************\r\n// NOTIFICATIONS\r\n// ***********************************\r\n\r\n.notification{\r\n\tpadding: 40px;\r\n\tmargin: 20px;\r\n\r\n\tspan{\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: 1.5em;\r\n\t\tdisplay: block;\r\n\t\tpadding-bottom: 20px;\r\n\t}\r\n}\r\n\r\n.notification.message{\r\n\tbackground: $notification-message;\r\n\tcolor: $white;\r\n\t// border: 1px solid darken( $notification-message, 10% );\r\n}\r\n\r\n.notification.success{\r\n\tbackground: $notification-success;\r\n\tcolor: $white;\r\n\t// border: 1px solid darken( $notification-success, 10% );\r\n}\r\n\r\n.notification.warning{\r\n\tbackground: $notification-warning;\r\n\tcolor: $white;\r\n\t// border: 1px solid darken( $notification-warning, 10% );\r\n}\r\n\r\n.notification.alert{\r\n\tbackground: $notification-alert;\r\n\tcolor: $white;\r\n\t// border: 1px solid darken( $notification-alert, 10% );\r\n}\r\n\r\n\r\n\r\n// ***********************************\r\n// PANELS\r\n// ***********************************\r\n\r\n.panel{\r\n\tpadding: 40px;\r\n\tmargin: 20px;\r\n\tbackground: $panel;\r\n}\r\n\r\n.panel.callout{\r\n\tbackground: $color1;\r\n\tcolor: $white;\r\n}"]}